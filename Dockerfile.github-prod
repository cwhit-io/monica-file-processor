# Production multi-stage Dockerfile that pulls from GitHub
# Usage: docker build -f Dockerfile.github-prod --build-arg BRANCH=main -t monica-file-processor:prod .

FROM node:18-alpine AS builder

# Build argument for branch/tag (defaults to main)
ARG BRANCH=main

# Install git for cloning
RUN apk add --no-cache git

# Set working directory
WORKDIR /app

# Clone the specific branch/tag from GitHub
RUN echo "Cloning branch/tag: ${BRANCH}" && \
    git clone --depth 1 --branch ${BRANCH} https://github.com/cwhit-io/monica-file-processor.git . && \
    rm -rf .git && \
    echo "Successfully cloned ${BRANCH}"

# Install all dependencies (including dev dependencies for building)
RUN npm ci

# Remove dev dependencies and clean up
RUN npm prune --production && \
    npm cache clean --force

# Production stage
FROM node:18-alpine AS production

# Install curl for health checks
RUN apk add --no-cache curl

# Set working directory
WORKDIR /app

# Create necessary directories with proper permissions
RUN mkdir -p /app/uploads /app/outputs /app/server-folders /app/data && \
    addgroup -g 1001 -S nodejs && \
    adduser -S monica -u 1001 -G nodejs

# Copy production dependencies from builder
COPY --from=builder --chown=monica:nodejs /app/node_modules ./node_modules

# Copy application code from builder (already cloned from GitHub)
COPY --from=builder --chown=monica:nodejs /app .

# Set proper permissions
RUN chown -R monica:nodejs /app

# Switch to non-root user
USER monica

# Expose port
EXPOSE 3003

# Environment variables
ENV NODE_ENV=production
ENV PORT=3003

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3003/ || exit 1

# Start the application
CMD ["npm", "start"]